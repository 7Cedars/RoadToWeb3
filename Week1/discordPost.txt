Hi everyone, 

Here are some brief reflections and information on my submission. There is an extended relfection are in my mirror.xyz post. 

Contract address: https://goerli.etherscan.io/address/0x5b615ec4f0112150fc7085f651f8febfd38f1cc3

OpenSea address (screen dump below): https://testnets.opensea.io/assets/goerli/0x5b615ec4f0112150fc7085f651f8febfd38f1cc3/1  

Reflections on this task: https://mirror.xyz/7cedars.eth/5kTdE2n7-X3sUl8S3H9Asb_JyFNdtyFHYTtkaGJtFOM

Twitter: https://twitter.com/7__Cedars/status/1588496312617799681

Contract code: https://github.com/7Cedars/RoadToWeb3/blob/main/Week1/MintERC721.sol

Brief answers to the questions: 

1) Who are you, and what is your software development background?
I’m from the Netherlands but have been living in England for the last five years. I have a background in the social sciences and have worked with R and Python - but never as the main part of my academic work. 

2) Why did you want to complete this lesson?
First, to strengthen my knowledge of solidity. A second reason was to engage more with the online community of people learning solidity. 

3) When did you complete the project?
October 31st. 

4) What technologies did you use?
The Open Zeppelin Smart Contract wizard and Remix. I used Inkscape to draw myself an NFT :) 

5) What did you enjoy about the tutorial?
The use of a wizard to create standardised (but still editable) smart contracts was an eye opener. It’s super easy to use, supports best practices and is a safe way to start building contracts. I will definitely use the Open Zeppelin (the wizard or their Github repository) constantly from now onward. 

6) How do you think you can use this technology to build useful applications in the future? What are some specific example applications?
First create a basic contract through the Open Zeppelin Wizard, then adapt it to your own needs for your project. Example contracts can be pretty much anything: from building an NFT-like contract, to setting up a DAO or soulbound token.

There is a flip side to this though, especially for junior developers like me. To be able to make safe adaptations to template contracts, you do need to have detailed knowledge of how these contracts work. You only learn this, I think, by building your own contracts from teh ground up: making and learning from your own mistakes.   

7) Who would you recommend this project to?
Anyone who is thinking about building on the blockchain. They need to know these wizards and best practices. 

8) What is the Ethereum wallet address you would like to receive your PoK at?Here 
0x1ABe345C38Abf38799Cc5248d747b4ec1B8429dE
